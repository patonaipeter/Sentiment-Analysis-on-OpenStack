// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package at.ac.tuwien.frontend.website.web;

import at.ac.tuwien.frontend.website.domain.CloudUser;
import at.ac.tuwien.frontend.website.domain.Task;
import at.ac.tuwien.frontend.website.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<CloudUser, String> ApplicationConversionServiceFactoryBean.getCloudUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<at.ac.tuwien.frontend.website.domain.CloudUser, java.lang.String>() {
            public String convert(CloudUser cloudUser) {
                return new StringBuilder().append(cloudUser.getUserName()).append(' ').append(cloudUser.getPassword()).append(' ').append(cloudUser.getCompany()).append(' ').append(cloudUser.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, CloudUser> ApplicationConversionServiceFactoryBean.getIdToCloudUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, at.ac.tuwien.frontend.website.domain.CloudUser>() {
            public at.ac.tuwien.frontend.website.domain.CloudUser convert(java.lang.Long id) {
                return CloudUser.findCloudUser(id);
            }
        };
    }
    
    public Converter<String, CloudUser> ApplicationConversionServiceFactoryBean.getStringToCloudUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, at.ac.tuwien.frontend.website.domain.CloudUser>() {
            public at.ac.tuwien.frontend.website.domain.CloudUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), CloudUser.class);
            }
        };
    }
    
    public Converter<Task, String> ApplicationConversionServiceFactoryBean.getTaskToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<at.ac.tuwien.frontend.website.domain.Task, java.lang.String>() {
            public String convert(Task task) {
                return new StringBuilder().append(task.getTaskName()).append(' ').append(task.getDescription()).append(' ').append(task.getKeyword()).append(' ').append(task.getSentiment()).toString();
            }
        };
    }
    
    public Converter<Long, Task> ApplicationConversionServiceFactoryBean.getIdToTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, at.ac.tuwien.frontend.website.domain.Task>() {
            public at.ac.tuwien.frontend.website.domain.Task convert(java.lang.Long id) {
                return Task.findTask(id);
            }
        };
    }
    
    public Converter<String, Task> ApplicationConversionServiceFactoryBean.getStringToTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, at.ac.tuwien.frontend.website.domain.Task>() {
            public at.ac.tuwien.frontend.website.domain.Task convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Task.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCloudUserToStringConverter());
        registry.addConverter(getIdToCloudUserConverter());
        registry.addConverter(getStringToCloudUserConverter());
        registry.addConverter(getTaskToStringConverter());
        registry.addConverter(getIdToTaskConverter());
        registry.addConverter(getStringToTaskConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
